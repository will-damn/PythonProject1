#DICTIONARIES: This section contains the Dictionaries for Race, Class, and Background which will be referenced throughout the code


#Lists of the Classes, Races, Backgrounds, and Alignments
Classes = ["Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Warlock", "Wizard"]
Races = ["Dragonborn", "Hill Dwarf", "Mountain Dwarf", "Drow", "High Elf", "Wood Elf", "Forest Gnome", "Rock Gnome", "Lightfoot Halfling", "Stout Halfling", "Half-Elf", "Half-Orc", "Human", "Tiefling"]
Backgrounds = ["Acolyte", "Charlatan", "Criminal", "Entertainer", "Folk Hero", "Guild Artisan", "Hermit", "Noble", "Outlander", "Sage", "Sailor", "Soldier", "Urchin"]
Alignments = ["Lawful Good", "Neutral Good", "Chaotic Good", "Lawful Neutral", "True Neutral", "Chaotic Neutral", "Lawful Evil", "Neutral Evil", "Chaotic Evil"]

# Race affects languages, main stats, skill proficiencies, speed, weapon proficiencies

Dragonborn = {
  "Languages" : "Common, Draconic"
  "Main Stats" : ["STR +2", "CHA +1"]
  "Skill Proficiencies" : 
  "Speed" : "30"
  "Weapon Proficiencies" : 
  }
Hill Dwarf = {
  "Languages" : "Common, Dwarvish"
  "Main Stats" : ["CON +2", "WIS +1"]
  "Skill Proficiencies" : 
  "Speed" : "25"
  "Weapon Proficiencies" : "Battleaxe, Handaxe, Throwing Hammer, Warhammer"
  }
Mountain Dwarf = {
  "Languages" : "Common, Dwarvish"
  "Main Stats" : ["CON +2", "STR +2"]
  "Skill Proficiencies" :
  "Speed" : "25"
  "Weapon Proficiencies" : "Battleaxe, Handaxe, Throwing Hammer, Warhammer"
  }
Drow = {
  "Languages" : "Common, Elvish"
  "Main Stats" : ["DEX +2", "CHA +1"]
  "Skill Proficiencies" : "Perception"
  "Speed" : "30"
  "Weapon Proficiencies" : "Rapiers, Shortswords, Hand Crossbows"
  }
High Elf = {
  "Languages" : "Common, Elvish"
  "Main Stats" : ["DEX +2", "INT +1"]
  "Skill Proficiencies" : "Perception"
  "Speed" : "30"
  "Weapon Proficiencies" : "Longsword, Shortsword, Longbow, Shortbow"
  }
Wood Elf = {
  "Languages" : "Common, Elvish"
  "Main Stats" : ["DEX +2", "WIS +1"]
  "Skill Proficiencies" : "Perception"
  "Speed" : "35"
  "Weapon Proficiencies" : "Longsword, Shortsword, Longbow, Shortbow"
  }
Forest Gnome = {
  "Languages" : "Common, Gnomish"
  "Main Stats" : ["INT +2", "DEX +1"]
  "Skill Proficiencies" : ""
  "Speed" : "25"
  "Weapon Proficiencies" : ""
  }
Rock Gnome = {
  "Languages" : "Common, Gnomish"
  "Main Stats" : ["INT +2", "CON +1"]
  "Skill Proficiencies" : ""
  "Speed" : "25"
  "Weapon Proficiencies" : ""
  }
Lightfoot Halfling = {
  "Languages" : "Common, Halfling"
  "Main Stats" : ["DEX +2", "CHA +1"]
  "Skill Proficiencies" : ""
  "Speed" : "25"
  "Weapon Proficiencies" : ""
  }
Stout Halfling = {
  "Languages" : "Common, Halfling"
  "Main Stats" : ["DEX +2", "CON +1"]
  "Skill Proficiencies" : ""
  "Speed" : "25"
  "Weapon Proficiencies" : ""
  }
Half-Elf = {
  "Languages" : "Common, Elvish, +1"
  "Main Stats" : ["CHA +2", "2 Others +1"]
  "Skill Proficiencies" : "2 Of Your Choice"
  "Speed" : "30"
  "Weapon Proficiencies" : ""
  }
Half-Orc = {
  "Languages" : "Common, Orc"
  "Main Stats" : ["STR +2", "CON +1"]
  "Skill Proficiencies" : "Intimidation"
  "Speed" : "30"
  "Weapon Proficiencies" : ""
  }
Human = {
  "Languages" : "Common, +1"
  "Main Stats" : ["STR +1", "DEX +1", "CON +1", "INT +1", "WIS +1", "CHA +1"]
  "Skill Proficiencies" : ""
  "Speed" : "30"
  "Weapon Proficiencies" : ""
  }
Tiefling = {
  "Languages" : "Common, Infernal"
  "Main Stats" : ["INT +1", "CHA +2"]
  "Skill Proficiencies" : ""
  "Speed" : "30"
  "Weapon Proficiencies" : ""
  }

# Class affects armor proficiencies, hit dice, starting armor, tool proficiencies, weapon proficiencies

Barbarian = {
  "Armor Proficiencies" : "Light Armor, Medium Armor, Shields"
  "Hit Dice" : "D12"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Simple Weapons, Martial Weapons"
  }
Bard = {
  "Armor Proficiencies" : "Light Armor"
  "Hit Dice" : "D8"
  "Tool Proficiencies" : "3 Types of Musical Instrument"
  "Weapon Proficiencies" : "Simple Weapons, Hand Crossbows, Longswords, Rapiers, Shortswords"]
  }
Cleric = {
  "Armor Proficiencies" : "Light Armor" "Medium Armor" "Shields"
  "Hit Dice" : "D8"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Simple Weapons"
  }
Druid = {
  "Armor Proficiencies" : "Light Armor, Medium Armor, Shields (Nothing Metal)"
  "Hit Dice" : "D8"
  "Tool Proficiencies" : "Herbalism Kit"
  "Weapon Proficiencies" : "Clubs, Daggers, Darts, Javelins, Maces, Quarterstaffs, Scimitars, Sickles, Slings, Spears"
  }
Fighter = {
  "Armor Proficiencies" : "All Armor, Shields"
  "Hit Dice" : "D10"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Simple Weapons, Martial Weapons"
  }
Monk = {
  "Armor Proficiencies" :  ""
  "Hit Dice" : "D8"
  "Tool Proficiencies" : "One Type Of Artisan's Tools or 1 Type of Musical Instrument"
  "Weapon Proficiencies" : "Simple Weapons, Shortswords"
  }
Paladin = {
  "Armor Proficiencies" : "All Armor, Shields"
  "Hit Dice" : "D10"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Simple Weapons, Martial Weapons"
  }
Ranger = {
  "Armor Proficiencies" : "Light Armor, Medium Armor, Shields"
  "Hit Dice" : "D10"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Simple Weapons, Martial Weapons"
  }
Rogue = {
  "Armor Proficiencies" : "Light Armor"
  "Hit Dice" : "D8"
  "Tool Proficiencies" : "Thieve's Tools"
  "Weapon Proficiencies" : ""Simple Weapons, Hand Crossbows, Longswords, Rapiers, Shortswords"
  }
Sorcerer = {
  "Armor Proficiencies" : ""
  "Hit Dice" : "D6"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Daggers, Darts, Slings, Quarterstaffs, Light Crossbows"
  }
Warlock = {
  "Armor Proficiencies" : "Light Armor"
  "Hit Dice" : "D8"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Simple Weapons"
  }
Wizard = {
  "Armor Proficiencies" : ""
  "Hit Dice" : "D6"
  "Tool Proficiencies" : ""
  "Weapon Proficiencies" : "Daggers, Darts, Slings, Quarterstaffs, Light Crossbows"
  }

# Background affects languages, skill proficiencies, starting money, tool proficiencies, equipment

Acoltye = {
  "Languages" : "2 Of Your Choice"
  "Skill Proficiencies" : {"Insight", "Religion"]
  "Starting Money" : "15 GP"
  "Tool Proficiencies" : 
  "Equipment" : "A Holy Symbol (a gift to you when you entered the priesthood), A Prayer Book or Prayer Wheel, 5 Sticks of Incense, Vestments, A Set of Common Clothes"
  }
Charlatan = {
  "Languages" : ""
  "Skill Proficiencies" : ["Deception", "Sleight of Hand"]
  "Starting Money" : "15 GP"
  "Tool Proficiencies" : "Disguise Kit, Forgery Kit"
  "Equipment" : "A Set of Fine Clothes, A Disguise Kit, Tools of the Con of Your Choice (Ten Stoppered Bottles Filled with Colored Liquid, A Set of Weighted Dice, A Deck of Marked Cards, or A Signet Ring of an Imaginary Duke)"
  }
Criminal = {
   "Languages" : ""
  "Skill Proficiencies" : ["Deception", "Stealth"]
  "Starting Money" : "15 GP"
  "Tool Proficiencies" : "1 Type of Gaming Set, Thieve's Tools"
  "Equipment" : "A Crowbar, A Set of Dark Common Clothes Including a Hood"
  }
Entertainer = {
   "Languages" : ""
  "Skill Proficiencies" : ["Acrobatics", "Performance"]
  "Starting Money" : "15 GP"
  "Tool Proficiencies" : "Disguise Kit, 1 Type of Musical Instrument"
  "Equipment" : "A Musical Instrument (one of your choice), The Favor of an Admirer (love letter, lock o f hair, or trinket), A Costume"
  }
Folk Hero = {
   "Languages" : ""
  "Skill Proficiencies" : ["Animal Handling", "Survival"]
  "Starting Money" : "10 GP"
  "Tool Proficiencies" : "1 Type of Artisan's Tools, Vehicles (Land)"
  "Equipment" : "A Set of Artisan’s Tools (one of your choice), A Shovel, An Iron Pot, A Set of Common Clothes"
  }
Guild Artisan = {
   "Languages" : "1 of Your Choice"
  "Skill Proficiencies" : ["Insight", "Persuasion"]
  "Starting Money" : "15 GP"
  "Tool Proficiencies" : "1 Type of Artisan's Tools"
  "Equipment" : "A Set of Artisan’s Tools (one of your choice), A Letter of Introduction from Your Guild, A Set of Traveler’s Clothes"
  }
Hermit = {
   "Languages" : "1 of Your Choice"
  "Skill Proficiencies" : ["Medicine", "Religion"]
  "Starting Money" : "5 GP"
  "Tool Proficiencies" : "Herbalism Kit"
  "Equipment" : "A Scroll Case Stuffed Full of Notes from Your Studies or Prayers, A Winter Blanket, A Set of Common Clothes, An Herbalism Kit"
  }
Noble = {
   "Languages" : "1 of Your Choice" 
  "Skill Proficiencies" : ["History","Persuasion"]
  "Starting Money" : "25 GP"
  "Tool Proficiencies" : "1 Type of Gaming Set"
  "Equipment" : "A Set of Fine Clothes, A Signet Ring, A Scroll of Pedigree"
  }
Outlander = {
   "Languages" : "1 of Your Choice"
  "Skill Proficiencies" : ["Athletics", "Survival"]
  "Starting Money" : "10 GP"
  "Tool Proficiencies" : "1 Type of Musical Instrument"
  "Equipment" : "A Staff, A Hunting Trap, A Trophy From an Animal You Killed, A Set of Traveler’s Clothes"
  }
Sage = {
   "Languages" : "2 of Your Choice"
  "Skill Proficiencies" : ["Arcana", "History"]
  "Starting Money" : "10 GP"
  "Tool Proficiencies" : ""
  "Equipment" : "A Bottle of Black Ink, A Quill, A Small Knife, A Letter from a Dead Colleague Posing a Question You Have Not Yet Been Able to Answer, A Set of Common Clothes"
  }
Sailor = {
   "Languages" : ""
  "Skill Proficiencies" : ["Athletics", "Perception"]
  "Starting Money" : "10 GP"
  "Tool Proficiencies" : "Navigator's Tools, Vehicles (Water)"
  "Equipment" : "Belaying Pin (club), 50 Feet of Silk Rope, A Lucky Charm Such as a Rabbit Foot or a Small Stone with a Hole in the Center (or you may roll for a random trinket on the Trinkets table in chapter 5), A Set of Common Clothes"
  }
Soldier = {
   "Languages" : ""
  "Skill Proficiencies" : ["Athletics", "Intimidation"]
  "Starting Money" : "10 GP"
  "Tool Proficiencies" : "1 Type of Gaming Set, Vehicles (Land)"
  "Equipment" : "An Insignia of Rank, A Trophy Taken from a Fallen Enemy (a dagger, broken blade, or piece o f a banner), A Set of Bone Dice or Deck of Cards, A set of Common Clothes"
  }
Urchin = {
   "Languages" : ""
  "Skill Proficiencies" : ["Sleight of Hand", "Stealth"]
  "Starting Money" : "10 GP"
  "Tool Proficiencies" : "Disguise Kit, Thieve's Tools"
  "Equipment" : "A Small Knife, A Map of the City Where You Grew Up, A Pet Mouse, A Token to Remember Your Parents by, A Set of Common Clothes"
  }


# PLAYER INFO
# This is the PLAYER INFO Section, which contains the Character Name, Class, Race, Player Name, Alignment, XP, and Level


Character_Name = raw_input("Character Name: ")

Player_Name = raw_input("Player Name: ")

# Class
import inquirer
Class = [
  inquirer.List('class',
      message = "Choose Your Class",
      choices = ["Barbarian", "Bard", "Cleric", "Druid", "Fighter", "Monk", "Paladin", "Ranger", "Rogue", "Sorcerer", "Warlock", "Wizard"],
    ),
]
Class = inquirer.prompt(Class)

# Race
Race = [
  inquirer.List('race',
      message = "Choose Your Race",
      choices = ["Dragonborn", "Hill Dwarf", "Mountain Dwarf", "Drow", "High Elf", "Wood Elf", "Forest Gnome", "Rock Gnome", "Lightfoot Halfling", "Stout Halfling", "Half-Elf", "Half-Orc", "Human", "Tiefling"],
    ),
]
Race = inquirer.prompt(Race)

# Background
Background = [
  inquirer.List('background',
      message = "Choose Your Background
      choices = ["Acolyte", "Charlatan", "Criminal", "Entertainer", "Folk Hero", "Guild Artisan", "Hermit", "Noble", "Outlander", "Sage", "Sailor", "Soldier", "Urchin"],
    ),
]
Background = inquirer.prompt(Background)

# Alignment
Alginment = [
  inquirer.List('alignment',
      message = "Choose Your Alignment",
      choices = ["Lawful Good", "Neutral Good", "Chaotic Good", "Lawful Neutral", "True Neutral", "Chaotic Neutral", "Lawful Evil", "Neutral Evil", "Chaotic Evil"],
    ),
]
Alignment = inquirer.prompt(Alignment)

# XP and Level
XP = raw_input("XP: ")

Level = 1
  if XP < 300:
    Level = Level
  elif XP >= 300 or XP <900:
    Level = 2
  elif XP >= 900 or XP <2700:
    Level = 3
  elif XP >= 2700 or XP <6500:
    Level = 4
  elif XP >= 6500 or XP <14000:
    Level = 5
  elif XP >= 14000 or XP <23000:
    Level = 6
  elif XP >= 23000 or XP <34000:
    Level = 7
  elif XP >= 34000 or XP <48000:
    Level = 8
  elif XP >= 48000 or XP <64000:
    Level = 9
  elif XP >= 64000 or XP <85000:
    Level = 10
  elif XP >= 85000 or XP <100000:
    Level = 11
  elif XP >= 100000 or XP <120000:
    Level = 12
  elif XP >= 120000 or XP <140000:
    Level = 13
  elif XP >= 140000 or XP <165000:
    Level = 14
  elif XP >= 165000 or XP <195000:
    Level = 15
  elif XP >= 195000 or XP <225000:
    Level = 16
  elif XP >= 225000 or XP <265000:
    Level = 17
  elif XP >= 265000 or XP <305000:
    Level = 18
  elif XP >= 305000 or XP <355000:
    Level = 19
  elif XP >= 355000:
    Level = 20

# Print All
Print "Character Name: " + Character_Name
Print "Player Name: " + Player_Name
Print "Class: " + Class
Print "Race: " + Race
Print "Alignment: " + Alignment
Print "Background: " + Background
Print "Level: " + Level
Print "XP: " + XP


# Base Stats
# This is the Section that will track the base stats of STR, DEX, CON, INT, WIS, and CHA with Race, Class, Background, and Other bonuses


def STR (Strength, OtherSTR):
    Strength = raw_input("Strength: ")
    Strength = int(Strength)
      if Race == "Dragonborn" or Race == "Mountain Dwarf" or Race == "Half-Orc":
        Strength == Strength + 2
      elif Race == Human:
        Strength == Strength + 1
    OtherSTR = raw_input("Other Strength Modifiers: ")
    OtherSTR = int(OtherSTR)
  return Strength + OtherSTR
  
def DEX (Dexterity, OtherDEX):
    Dexterity = raw_input("Dexterity: ")
    Dexterity = int(Dexterity)
      if Race == "Drow" or Race == "High Elf" or Race == "Wood Elf" or Race == "Lightfoot Halfling" or Race == "Stout Halfling":
        Dexterity == Dexterity + 2
      elif Race == "Forest Gnome" or Race == "Human":
        Dexterity == Dexterity + 1
    OtherDEX = raw_input("Other Dexterity Modifiers: ")
    OtherDEX = int(OtherDEX)
  return Dexterity + OtherDEX
  
def CON (Constitution, OtherCON):
    Constitution = raw_input("Constitution: ")
    Constitution = int(Constitution)
      if Race == "Hill Dwarf" or Race == "Mountain Dwarf":
        Constitution == Constitution + 2
      elif Race =="Rock Gnome" or Race == "Stout Halfling" or Race == "Half-Orc" or Race == "Human":
        Constitution == Constitution + 1
    OtherCON = raw_input("Other Constitution Modifiers: ")
    OtherCON = int(OtherCON)
  return Constitution + OtherCON
  
def INT (Intelligence, OtherINT):
    Intelligence = raw_input("Intelligence: ")
    Intelligence = int(Intelligence)
      if Race == "Forest Gnome" or Race == "Rock Gnome":
        Intelligence == Intelligence + 2
      elif Race == "High Elf" or Race == "Wood Elf" or Race == "Human" or Race == "Tiefling":
        Intelligence == Intelligence + 1
    OtherINT = raw_input("Other Intelligence Modifiers: ")
    OtherINT = int(OtherINT)
  return Intelligence + OtherINT
  
def WIS (Wisdom, OtherWIS):
    Wisdom = raw_input("Wisdom: ")
    Wisdom = int(Wisdom)
      if Race == "Hill Dwarf" or Race == "Wood Elf" or Race == "Human":
        Wisdom == Wisdom + 1
    OtherWIS = raw_input("Other Wisdom Modifiers: ")
    OtherWIS = int(OtherWIS)
  return Wisdom + OtherWIS
  
def CHA (Charisma, OtherCHA):
    Charisma = raw_input("Charisma: ")
    Charisma = int(Charisma)
      if Race == "Half Elf" or Race == "Tiefling":
        Charisma == Charisma + 2
      elif Race == "Dragonborn" or Race == "Drow" or Race == "Lightfoot Halfling" or Race == "Human":
        Charisma == Charisma + 1
    OtherCHA = raw_input("Other Charisma Modifiers: ")
    OtherCHA = Charisma + int(OtherCHA)
  return Intelligence + OtherINT


# This section defines the main Save Throws


STR_Save = 0
  if STR = 1:
    STR_Save = -5
  elif STR = 2 or STR = 3:
    STR_Save = -4
  elif STR = 4 or STR = 5:
    STR_Save = -3
  elif STR = 6or STR = 7:
    STR_Save = -2
  elif STR = 8 or STR = 9:
    STR_Save = -1
  elif STR = 10 or STR = 11:
    STR_Save = 0
  elif STR = 12 or STR = 13:
    STR_Save = 1
  elif STR = 14 or STR = 15:
    STR_Save = 2
  elif STR = 16 or STR = 17:
    STR_Save = 3
  elif STR = 18 or STR = 19:
    STR_Save = 4
  elif STR = 20 or STR = 21:
    STR_Save = 5
  elif STR = 22 or STR = 23:
    STR_Save = 6
  elif STR = 24 or STR = 25:
    STR_Save = 7    
  elif STR = 26 or STR = 27:
    STR_Save = 8
  elif STR = 28 or STR = 29:
    STR_Save = 9
  elif STR = 30:
    STR_Save = 10
  return STR_Save
  if STR_proficiency_bonus = True:
    STR_Save = STR_Save + Proficiency Bonus
    
DEX_Save = 0
  if DEX = 1:
    DEX_Save = -5
  elif DEX = 2 or DEX = 3:
    DEX_Save = -4
  elif DEX = 4 or DEX = 5:
    DEX_Save = -3
  elif DEX = 6or DEX = 7:
    DEX_Save = -2
  elif DEX = 8 or DEX = 9:
    DEX_Save = -1
  elif DEX = 10 or DEX = 11:
    DEX_Save = 0
  elif DEX = 12 or DEX = 13:
    DEX_Save = 1
  elif DEX = 14 or DEX = 15:
    DEX_Save = 2
  elif DEX = 16 or DEX = 17:
    DEX_Save = 3
  elif DEX = 18 or DEX = 19:
    DEX_Save = 4
  elif DEX = 20 or DEX = 21:
    DEX_Save = 5
  elif DEX = 22 or DEX = 23:
    DEX_Save = 6
  elif DEX = 24 or DEX = 25:
    DEX_Save = 7    
  elif DEX = 26 or DEX = 27:
    DEX_Save = 8
  elif DEX = 28 or DEX = 29:
    DEX_Save = 9
  elif DEX = 30:
    DEX_Save = 10
  return DEX_Save
  if DEX_proficiency_bonus = True:
    DEX_Save = DEX_Save + Proficiency Bonus

CON_Save = 0
  if CON = 1:
    CON_Save = -5
  elif CON = 2 or CON = 3:
    CON_Save = -4
  elif CON = 4 or CON = 5:
    CON_Save = -3
  elif CON = 6or CON = 7:
    CON_Save = -2
  elif CON = 8 or CON = 9:
    CON_Save = -1
  elif CON = 10 or CON = 11:
    CON_Save = 0
  elif CON = 12 or CON = 13:
    CON_Save = 1
  elif CON = 14 or CON = 15:
    CON_Save = 2
  elif CON = 16 or CON = 17:
    CON_Save = 3
  elif CON = 18 or CON = 19:
    CON_Save = 4
  elif CON = 20 or CON = 21:
    CON_Save = 5
  elif CON = 22 or CON = 23:
    CON_Save = 6
  elif CON = 24 or CON = 25:
    CON_Save = 7    
  elif CON = 26 or CON = 27:
    CON_Save = 8
  elif CON = 28 or CON = 29:
    CON_Save = 9
  elif CON = 30:
    CON_Save = 10
  return CON_Save
  if CON_proficiency_bonus = True:
    CON_Save = CON_Save + Proficiency Bonus

INT_Save = 0
  if INT = 1:
    INT_Save = -5
  elif INT = 2 or INT = 3:
    INT_Save = -4
  elif INT = 4 or INT = 5:
    INT_Save = -3
  elif INT = 6or INT = 7:
    INT_Save = -2
  elif INT = 8 or INT = 9:
    INT_Save = -1
  elif INT = 10 or INT = 11:
    INT_Save = 0
  elif INT = 12 or INT = 13:
    INT_Save = 1
  elif INT = 14 or INT = 15:
    INT_Save = 2
  elif INT = 16 or INT = 17:
    INT_Save = 3
  elif INT = 18 or INT = 19:
    INT_Save = 4
  elif INT = 20 or INT = 21:
    INT_Save = 5
  elif INT = 22 or INT = 23:
    INT_Save = 6
  elif INT = 24 or INT = 25:
    INT_Save = 7    
  elif INT = 26 or INT = 27:
    INT_Save = 8
  elif INT = 28 or INT = 29:
    INT_Save = 9
  elif INT = 30:
    INT_Save = 10
  return INT_Save
  if INT_proficiency_bonus = True:
    INT_Save = INT_Save + Proficiency Bonus

WIS_Save = 0
  if WIS = 1:
    WIS_Save = -5
  elif WIS = 2 or WIS = 3:
    WIS_Save = -4
  elif WIS = 4 or WIS = 5:
    WIS_Save = -3
  elif WIS = 6or WIS = 7:
    WIS_Save = -2
  elif WIS = 8 or WIS = 9:
    WIS_Save = -1
  elif WIS = 10 or WIS = 11:
    WIS_Save = 0
  elif WIS = 12 or WIS = 13:
    WIS_Save = 1
  elif WIS = 14 or WIS = 15:
    WIS_Save = 2
  elif WIS = 16 or WIS = 17:
    WIS_Save = 3
  elif WIS = 18 or WIS = 19:
    WIS_Save = 4
  elif WIS = 20 or WIS = 21:
    WIS_Save = 5
  elif WIS = 22 or WIS = 23:
    WIS_Save = 6
  elif WIS = 24 or WIS = 25:
    WIS_Save = 7    
  elif WIS = 26 or WIS = 27:
    WIS_Save = 8
  elif WIS = 28 or WIS = 29:
    WIS_Save = 9
  elif WIS = 30:
    WIS_Save = 10
  return WIS_Save
  if WIS_proficiency_bonus = True:
    WIS_Save = WIS_Save + Proficiency Bonus

CHA_Save = 0
  if CHA = 1:
    CHA_Save = -5
  elif CHA = 2 or CHA = 3:
    CHA_Save = -4
  elif CHA = 4 or CHA = 5:
    CHA_Save = -3
  elif CHA = 6or CHA = 7:
    CHA_Save = -2
  elif CHA = 8 or CHA = 9:
    CHA_Save = -1
  elif CHA = 10 or CHA = 11:
    CHA_Save = 0
  elif CHA = 12 or CHA = 13:
    CHA_Save = 1
  elif CHA = 14 or CHA = 15:
    CHA_Save = 2
  elif CHA = 16 or CHA = 17:
    CHA_Save = 3
  elif CHA = 18 or CHA = 19:
    CHA_Save = 4
  elif CHA = 20 or CHA = 21:
    CHA_Save = 5
  elif CHA = 22 or CHA = 23:
    CHA_Save = 6
  elif CHA = 24 or CHA = 25:
    CHA_Save = 7    
  elif CHA = 26 or CHA = 27:
    CHA_Save = 8
  elif CHA = 28 or CHA = 29:
    CHA_Save = 9
  elif CHA = 30:
    CHA_Save = 10
  return CHA_Save
  if CHA_proficiency_bonus = True:
    CHA_Save = CHA_Save + Proficiency Bonus
